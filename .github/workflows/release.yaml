name: Release
on:
  push:
    branches:
    - master
  schedule:
  - cron: "0 */8 * * *"
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Prepare checking latest kubectl version
      run: docker build . -t line/kubectl-kustomize:kubectl-version --target latest-kubectl-version
    - name: Check latest kubectl version
      id: kubectl
      run: |
        if version=$(docker run line/kubectl-kustomize:kubectl-version); then
          echo ::set-output name=version::$version
        else
          exit 1
        fi
    - name: Prepare checking latest kustomize release
      run: |
        docker build . -t line/kubectl-kustomize:kustomize-version --target latest-kustomize-version
    - name: Check latest kustomize version
      id: kustomize
      run: |
        if version=$(docker run line/kubectl-kustomize:kustomize-version); then
          echo ::set-output name=version::$version
        else
          exit 1
        fi
    - name: Check image exists on registry
      id: image_existence
      env:
        IMAGE_TAG: ${{ format('{0}-{1}', steps.kubectl.outputs.version, steps.kustomize.outputs.version) }}
      shell: bash +e {0}
      run: |
        echo ::set-output name=tag::${IMAGE_TAG}
        result="$(DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect line/kubectl-kustomize:${IMAGE_TAG} 2>&1)"
        if [[ $? -eq 0 ]]; then
          echo ::set-output name=exists::true
        elif [[ $result == *"no such manifest"* ]]; then
          echo ::set-output name=exists::false
        else
          echo $result
          exit 1;
        fi
    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    # List available platforms for buildx
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    # Build the image using buildx
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      id: build
      if: steps.image_existence.outputs.exists == 'false'
      env:
        BUILDER_INSTANCE: ${{ steps.buildx.outputs.name }}
        IMAGE_TAG: ${{ steps.image_existence.outputs.tag }}
        KUBECTL_VERSION: ${{ steps.kubectl.outputs.version }}
        KUSTOMIZE_VERSION: ${{ steps.kustomize.outputs.version }}
      run: |
        docker buildx build \
          --builder ${BUILDER_INSTANCE} \
          --tag line/kubectl-kustomize:${IMAGE_TAG} \
          --platform linux/amd64 \
          --push \
          --build-arg KUBECTL_VERSION=${KUBECTL_VERSION} \
          --build-arg KUSTOMIZE_VERSION=${KUSTOMIZE_VERSION} \
          .
        echo ::set-output name=tag::${IMAGE_TAG}
